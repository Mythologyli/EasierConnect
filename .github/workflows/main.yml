name: Build

on:
  release:
    types: [ published ]
  push:
    paths:
      - "**/*.go"
      - "go.mod"
      - "go.sum"
      - ".github/workflows/*.yml"
  pull_request:
    types:
      - opened

permissions: write-all

jobs:
  build:
    strategy:
      matrix:
        # Include amd64 on all platforms.
        goos: [ windows, linux, darwin ]
        goarch: [ amd64, 386 ]
        exclude:
          # Exclude i386 on darwin.
          - goarch: 386
            goos: darwin
        include:
          # BEGIN Linux ARM 5 6 7
          - goos: linux
            goarch: arm
            goarm: 7
          - goos: linux
            goarch: arm
            goarm: 6
          - goos: linux
            goarch: arm
            goarm: 5
          # END Linux ARM 5 6 7
          # BEGIN Windows ARM 7
          - goos: windows
            goarch: arm
            goarm: 7
          # END Windows ARM 7
          # BEGIN Other architectures
          - goos: darwin
            goarch: arm64
          - goos: linux
            goarch: arm64
          - goos: linux
            goarch: riscv64
          - goos: windows
            goarch: arm64
          - goos: android
            goarch: arm64
          # BEGIN MIPS
          - goos: linux
            goarch: mips64
          - goos: linux
            goarch: mips64le
          - goos: linux
            goarch: mipsle
          - goos: linux
            goarch: mips
          # END MIPS
          # END Other architectures
      fail-fast: false

    runs-on: ubuntu-latest
    env:
      GOOS: ${{ matrix.goos }}
      GOARCH: ${{ matrix.goarch }}
      GOARM: ${{ matrix.goarm }}
      CGO_ENABLED: 0

    steps:
      - name: Checkout codebase
        uses: actions/checkout@v3

      - name: Show workflow information
        id: get_filename
        run: |
          export _NAME=$GOOS-$GOARCH$GOARM
          echo "GOOS: $GOOS, GOARCH: $GOARCH, GOARM: $GOARM, RELEASE_NAME: $_NAME"
          echo "ASSET_NAME=$_NAME" >> $GITHUB_OUTPUT
          echo "ASSET_NAME=$_NAME" >> $GITHUB_ENV

      - name: Set up Go
        uses: actions/setup-go@v3
        with:
          go-version: ^1.19

      - name: Get project dependencies
        run: go mod download

      - name: Build
        run: |
          mkdir -p build_assets
          go build -v -o build_assets/zju-connect -trimpath -ldflags "-s -w -buildid=" .

      - name: Rename Windows zju-connect
        if: matrix.goos == 'windows'
        run: |
          cd ./build_assets || exit 1
          mv zju-connect zju-connect.exe

      - name: Upload artifact
        if: github.event_name != 'release'
        uses: actions/upload-artifact@v3
        with:
          name: zju-connect-${{ steps.get_filename.outputs.ASSET_NAME }}
          path: build_assets/*

      - name: Create ZIP archive
        if: github.event_name == 'release'
        run: |
          pushd build_assets || exit 1
          zip -9vr ../zju-connect-$ASSET_NAME.zip .
          popd || exit 1

      - name: Upload release binary
        if: github.event_name == 'release'
        env:
          GITHUB_TOKEN: ${{ github.token }}
        run: |
          gh release upload ${{ github.event.release.tag_name }} zju-connect-${{ steps.get_filename.outputs.ASSET_NAME }}.zip

      # https://github.com/docker/setup-qemu-action
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      # https://github.com/docker/setup-buildx-action
      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v2

      # https://github.com/docker/login-action
      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      # https://github.com/docker/metadata-action
      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v3
        with:
          images: |
            117503445/zju-connect
          tags: |
            type=schedule
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}
            type=sha
            type=raw,value=latest
            
      # https://github.com/docker/build-push-action
      - name: Build and push
        uses: docker/build-push-action@v3
        with:
          context: .
          platforms: linux/amd64,linux/arm64
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}